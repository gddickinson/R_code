for (i in 1:n) {
random_sample <- sample(x,5)
dist_for5 [i] <- mean(random_sample)
}
set.seed(1)
n <- 1000
dist_for50 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,50)
dist_for5 [i] <- mean(random_sample)
}
dist_for5
dist_for50
set.seed(1)
n <- 1000
dist_for50 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,50)
dist_for50 [i] <- mean(random_sample)
}
dist_for50
hist(dist_for5)
hist(dist_for50)
set.seed(1)
n <- 1000
dist_for5 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,5)
dist_for5 [i] <- mean(random_sample)
}
set.seed(1)
n <- 1000
dist_for50 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,50)
dist_for50 [i] <- mean(random_sample)
}
mean(dist_for5)
mean(dist_for50)
hist(dist_for5)
hist(dist_for50)
p1 <- hist(dist_for5)
p2 <- hist(dist_for50)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,10))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,40))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(10,40))
plot( p2, col=rgb(1,0,0,1/4), xlim=c(10,10), add=T)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(20,30))
plot( p2, col=rgb(1,0,0,1/4), xlim=c(20,30), add=T)
x <- unlist( read.csv(filename) )
set.seed(1)
n <- 1000
dist_for5 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,5)
dist_for5 [i] <- mean(random_sample)
}
set.seed(1)
n <- 1000
dist_for50 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,50)
dist_for50 [i] <- mean(random_sample)
}
p1 <- hist(dist_for5)
p2 <- hist(dist_for50)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(20,30))
plot( p2, col=rgb(1,0,0,1/4), xlim=c(20,30), add=T)
rm (list = ls())
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
set.seed(1)
n <- 1000
dist_for5 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,5)
dist_for5 [i] <- mean(random_sample)
}
set.seed(1)
n <- 1000
dist_for50 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,50)
dist_for50 [i] <- mean(random_sample)
}
p1 <- hist(dist_for5)
p2 <- hist(dist_for50)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(20,30))
plot( p2, col=rgb(1,0,0,1/4), xlim=c(20,30), add=T)
prop_23to25 <- mean(dist_for50 <= 23) - mean(dist_for50 <= 25)
prop_23to25
prop_23to25 <- abs(mean(dist_for50 <= 23) - mean(dist_for50 <= 25))
normalDist <- rnorm(23.9,0.43)
?rnorm
normalDist <- rnorm(5000,23.9,0.43)
hist(normalDist)
propNormal_23to25 <- abs(mean(normalDist<= 23) - mean(normalDist<= 25))
propNormal_23to25
set.seed(1)
n <- 1000
dist_for5 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,5)
dist_for5 [i] <- mean(random_sample)
}
set.seed(1)
n <- 1000
dist_for50 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,50)
dist_for50 [i] <- mean(random_sample)
}
p1 <- hist(dist_for5)
p2 <- hist(dist_for50)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(20,30))
plot( p2, col=rgb(1,0,0,1/4), xlim=c(20,30), add=T)
prop_23to25 <- abs(mean(dist_for50 <= 23) - mean(dist_for50 <= 25))
normalDist <- rnorm(5000,23.9,0.43)
propNormal_23to25 <- abs(mean(normalDist<= 23) - mean(normalDist<= 25))
p3 <- hist(normalDist)
plot( p3, col=rgb(3,0,0,1/4), xlim=c(20,30), add=T)
set.seed(1)
n <- 1000
dist_for5 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,5)
dist_for5 [i] <- mean(random_sample)
}
set.seed(1)
n <- 1000
dist_for50 <- vector("numeric",n)
for (i in 1:n) {
random_sample <- sample(x,50)
dist_for50 [i] <- mean(random_sample)
}
p1 <- hist(dist_for5)
p2 <- hist(dist_for50)
plot( p1, col=rgb(0,0,1,1/4), xlim=c(20,30))
plot( p2, col=rgb(1,0,0,1/4), xlim=c(20,30), add=T)
prop_23to25 <- abs(mean(dist_for50 <= 23) - mean(dist_for50 <= 25))
normalDist <- rnorm(5000,23.9,0.43)
propNormal_23to25 <- abs(mean(normalDist<= 23) - mean(normalDist<= 25))
p3 <- hist(normalDist)
plot( p3, col=rgb(1,1,0,1/4), xlim=c(20,30), add=T)
rm(list = ls())
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- read.csv(filename)
dat <- na.omit( dat )
head(dat)
bodyweight_male <- unlist(filter(dat, Sex == M) %>% select(Bodyweight))
View(dat)
bodyweight_male <- unlist(filter(dat, Sex == "M") %>% select(Bodyweight))
bodyweight_male
bodyweight_male_mean < mean(bodyweight_male)
bodyweight_male_mean <- mean(bodyweight_male)
bodyweight_male_mean
bodyweight_male <- unlist(filter(dat, Sex == "M" & Diet == "chow") %>% select(Bodyweight))
View(bodyweight_male)
bodyweight_male_mean <- mean(bodyweight_male)
bodyweight_male_chow <- unlist(filter(dat, Sex == "M" & Diet == "chow") %>% select(Bodyweight))
bodyweight_male_chow_mean <- mean(bodyweight_male)
bodyweight_male_chow_mean
install.packages("rafalib")
library(rafalib)
bodyweight_male_chow_sd <- popsd(bodyweight_male_chow)
bodyweight_male_chow_sd
sample25 <- sample(bodyweight_male_chow,25)
sample25
sample25_mean <- mean(sample25)
sample25_mean
set.seed(1)
sample25 <- sample(bodyweight_male_chow,25)
sample25_mean <- mean(sample25)
sample25_mean
x <- unlist(filter(dat, Sex == "M" & Diet == "chow") %>% select(Bodyweight))
bodyweight_male_chow_mean <- mean(x)
bodyweight_male_chow_sd <- popsd(x)
set.seed(1)
sample25 <- sample(x,25)
sample25_mean <- mean(sample25)
y <- unlist(filter(dat, Sex == "M" & Diet == "hf") %>% select(Bodyweight))
bodyweight_male_hf_mean <- mean(y)
bodyweight_male_hf_sd <- popsd(y)
set.seed(1)
sample_y_25 <- sample(y,25)
sample_y_25_mean <- mean(sample25)
bodyweight_male_hf_mean
bodyweight_male_hf_sd
sample_y_25_mean
set.seed(1)
sample_y_25 <- sample(y,25)
sample_y_25_mean <- mean(sample25)
sample_y_25_mean
sample_y_25_mean <- mean(sample_y_25)
sample_y_25_mean
difference_means <- (bodyweight_male_hf_mean - bodyweight_male_chow_mean) - (sample_x_25_mean - sample_y_25_mean)
set.seed(1)
sample_x_25_mean <- mean(sample25)
set.seed(1)
sample_x_25 <- sample(x,25)
sample_x_25_mean <- mean(sample_x_25)
difference_means <- (bodyweight_male_hf_mean - bodyweight_male_chow_mean) - (sample_x_25_mean - sample_y_25_mean)
difference_means
difference_means <- abs(bodyweight_male_hf_mean - bodyweight_male_chow_mean) - abs(sample_x_25_mean - sample_y_25_mean)
difference_means
x <- unlist(filter(dat, Sex == "F" & Diet == "chow") %>% select(Bodyweight))
bodyweight_male_chow_mean <- mean(x)
bodyweight_male_chow_sd <- popsd(x)
set.seed(1)
sample_x_25 <- sample(x,25)
sample_x_25_mean <- mean(sample_x_25)
y <- unlist(filter(dat, Sex == "M" & Diet == "hf") %>% select(Bodyweight))
bodyweight_male_hf_mean <- mean(y)
bodyweight_male_hf_sd <- popsd(y)
set.seed(1)
sample_y_25 <- sample(y,25)
sample_y_25_mean <- mean(sample_y_25)
difference_means <- abs(bodyweight_male_hf_mean - bodyweight_male_chow_mean) - abs(sample_x_25_mean - sample_y_25_mean)
difference_means
x <- unlist(filter(dat, Sex == "F" & Diet == "chow") %>% select(Bodyweight))
bodyweight_female_chow_mean <- mean(x)
bodyweight_female_chow_sd <- popsd(x)
set.seed(1)
sample_x_25 <- sample(x,25)
sample_x_25_mean <- mean(sample_x_25)
y <- unlist(filter(dat, Sex == "F" & Diet == "hf") %>% select(Bodyweight))
bodyweight_female_hf_mean <- mean(y)
bodyweight_female_hf_sd <- popsd(y)
set.seed(1)
sample_y_25 <- sample(y,25)
sample_y_25_mean <- mean(sample_y_25)
difference_means <- abs(bodyweight_female_hf_mean - bodyweight_female_chow_mean) - abs(sample_x_25_mean - sample_y_25_mean)
difference_means
rm (list =ls())
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- na.omit( read.csv(filename) )
y <- unlist(filter(dat, Sex == "M" & Diet == "chow") %>% select(Bodyweight))
y
y_mean <- mean(y)
y_sd < popsd(y)
y_mean <- mean(y)
y_sd <- popsd(y)
prop = function(q) {
mean(y <= q)
}
prop1 <- prop(y_mean+y_sd)
prop1
prop2 <- prop(y_mean-y_sd)
prop2
prop_within_1sd <- prop1 - prop2
prop_within_1sd
prop3 <- prop(y_mean+(2*y_sd))
prop4 <- prop(y_mean-(2*y_sd))
prop_within_2sd <- prop3 - prop4
prop_within_2sd
prop5 <- prop(y_mean+(3*y_sd))
prop6 <- prop(y_mean-(3*y_sd))
prop_within_3sd <- prop5 - prop6
prop_within_3sd
qqnorm(z)
abline(0,1)
mypar(2,2)
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="F" & Diet=="chow") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="M" & Diet=="hf") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="F" & Diet=="hf") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
set.seed(1)
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
avgs <- replicate(10000, mean( sample(y, 25)))
mypar(1,2)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
avgs
mean(avgs)
sample_avgs_mean <- mean(avgs)
sample_avgs_sd <- popsd(avgs)
sample_avgs_sd
?mypar
hist(avgs)
hist(avgs)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
qqline(avgs)
plot(y,y)
qqline(y)
rm (list = ls())
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleMiceWeights.csv"
filename <- "femaleMiceWeights.csv"
if(!file.exists("femaleMiceWeights.csv")) download(url,destfile=filename)
dat <- read.csv(filename)
mypar(2,2)
set.seed(1)
n=5
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.1
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=0.01
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
mypar(2,2)
library(rafalib)
mypar(2,2)
mypar(2,2)
set.seed(1)
n=5
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.1
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=0.01
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=1/6
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z)
z_over_2 <- mean(abs(list_z) > 2)
mypar(2,2)
set.seed(1)
n=5
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.1
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=0.01
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
mypar(2,2)
set.seed(1)
n=5
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.01
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=0.01
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
mypar(2,2)
set.seed(1)
n=5
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==1/p)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.5
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==1/p)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=0.01
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==1/p)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=0.01
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==1/p)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
mypar(2,2)
set.seed(1)
n=5
p=1/2
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=1/2
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=1/100
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=1/100
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
mypar(2,2)
set.seed(1)
n=5
p=1/2
list_z <- replicate(10000, (mean(sample(1:2, n, replace=TRUE)==2)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=1/2
list_z <- replicate(10000, (mean(sample(1:2, n, replace=TRUE)==2)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=1/100
list_z <- replicate(10000, (mean(sample(1:100, n, replace=TRUE)==100)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=1/100
list_z <- replicate(10000, (mean(sample(1:100, n, replace=TRUE)==100)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
library(downloader)
library(rafalib)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleMiceWeights.csv"
filename <- "femaleMiceWeights.csv"
if(!file.exists("femaleMiceWeights.csv")) download(url,destfile=filename)
dat <- read.csv(filename)
#exercises 1-2
set.seed(1)
n=100
props <- replicate(1000, mean(sample(1:6, n, replace=TRUE)==6))
set.seed(1)
n=100
p=1/6
list_z <- replicate(10000, (mean(sample(1:6, n, replace=TRUE)==6)- p) / sqrt(p*(1-p)/n))
hist(list_z)
z_over_2 <- mean(abs(list_z) > 2)
mypar(2,2)
set.seed(1)
n=5
p=1/2
list_z <- replicate(10000, (mean(sample(1:2, n, replace=TRUE)==2)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=1/2
list_z <- replicate(10000, (mean(sample(1:2, n, replace=TRUE)==2)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=30
p=1/100
list_z <- replicate(10000, (mean(sample(1:100, n, replace=TRUE)==100)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
set.seed(1)
n=100
p=1/100
list_z <- replicate(10000, (mean(sample(1:100, n, replace=TRUE)==100)- p) / sqrt(p*(1-p)/n))
hist(list_z, main = paste("n=", n, "p=", p))
#exercise3
X <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
Y <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
library(dplyr)
X <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
Y <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
uX <- mean(X)
uX
sampleAverage_X <- mean(X)
